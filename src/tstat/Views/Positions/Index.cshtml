@model tstat.Models.PositionsPageViewModel
@{
    ViewData["Title"] = "–ê–Ω–∞–ª–∏–∑ –ø–æ–∑–∏—Ü–∏–π";
}

<h2>–ê–Ω–∞–ª–∏–∑ –ø–æ–∑–∏—Ü–∏–π –∏ P&L</h2>

@if (!string.IsNullOrEmpty(ViewBag.Error))
{
    <div class="alert alert-danger">@ViewBag.Error</div>
}

<form method="post" asp-action="GetPositions">
    <div class="row mb-3">
        <div class="col-md-4">
            <label class="form-label">–°—á–µ—Ç:</label>
            <select name="accountId" class="form-select" required>
                <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Å—á–µ—Ç</option>
                @foreach (var account in Model.Accounts)
                {
                    <option value="@account.Id" selected="@(account.Id == Model.SelectedAccountId)">
                        @account.Name (@account.Type)
                    </option>
                }
            </select>
        </div>
        <div class="col-md-3">
            <label class="form-label">–° –¥–∞—Ç—ã:</label>
            <input type="date" name="fromDate" class="form-control" value="@Model.FromDate.ToString("yyyy-MM-dd")" required />
        </div>
        <div class="col-md-3">
            <label class="form-label">–ü–æ –¥–∞—Ç—É:</label>
            <input type="date" name="toDate" class="form-control" value="@Model.ToDate.ToString("yyyy-MM-dd")" required />
        </div>
        <div class="col-md-2">
            <label class="form-label">&nbsp;</label>
            <button type="submit" class="btn btn-primary d-block">–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å</button>
        </div>
    </div>
</form>

@if (Model.Positions.Any())
{
    <div class="mt-4">
        <div class="row mb-3">
            <div class="col-md-4">
                <div class="card text-center">
                    <div class="card-body">
                        <h5 class="card-title">–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è P&L</h5>
                        <h4 class="@(Model.TotalRealizedPnL >= 0 ? "text-success" : "text-danger")">
                            @Model.TotalRealizedPnL.ToString("F2")
                        </h4>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card text-center">
                    <div class="card-body">
                        <h5 class="card-title">–ù–µ—Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è P&L</h5>
                        <h4 class="@(Model.TotalUnrealizedPnL >= 0 ? "text-success" : "text-danger")">
                            @Model.TotalUnrealizedPnL.ToString("F2")
                        </h4>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card text-center">
                    <div class="card-body">
                        <h5 class="card-title">–û–±—â–∞—è P&L</h5>
                        <h4 class="@(Model.TotalPnL >= 0 ? "text-success" : "text-danger")">
                            @Model.TotalPnL.ToString("F2")
                        </h4>
                    </div>
                </div>
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>–¢–∏–∫–µ—Ä</th>
                        <th>–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç</th>
                        <th>–¢–∏–ø</th>
                        <th>–û—Ç–∫—Ä—ã—Ç–∞—è –ø–æ–∑–∏—Ü–∏—è</th>
                        <th>–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞</th>
                        <th>–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è P&L</th>
                        <th>–ù–µ—Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è P&L</th>
                        <th>–û–±—â–∞—è P&L</th>
                        <th>–í–∞–ª—é—Ç–∞</th>
                        <th>–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–¥–µ–ª–∫–∞</th>
                        <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var position in Model.Positions)
                    {
                        <tr>
                            <td><strong>@position.Ticker</strong></td>
                            <td>@position.InstrumentName</td>
                            <td>@position.InstrumentType</td>
                            <td class="@(position.OpenQuantity > 0 ? "text-success" : position.OpenQuantity < 0 ? "text-danger" : "")">
                                @position.OpenQuantity
                            </td>
                            <td>@position.AveragePrice.ToString("F2")</td>
                            <td class="@(position.RealizedPnL >= 0 ? "text-success" : "text-danger")">
                                @position.RealizedPnL.ToString("F2")
                            </td>
                            <td class="@(position.UnrealizedPnL >= 0 ? "text-success" : "text-danger")">
                                @position.UnrealizedPnL.ToString("F2")
                            </td>
                            <td class="@(position.TotalPnL >= 0 ? "text-success" : "text-danger")">
                                <strong>@position.TotalPnL.ToString("F2")</strong>
                            </td>
                            <td>@position.Currency</td>
                            <td>@position.LastTradeDate.ToString("dd.MM.yyyy")</td>
                            <td>
                                <button class="btn btn-sm btn-outline-primary" onclick="showTrades('@position.Figi')">
                                    –°–¥–µ–ª–∫–∏
                                </button>
                            </td>
                        </tr>
                        <tr id="trades_@position.Figi" style="display: none;">
                            <td colspan="11">
                                <div class="p-3 bg-light">
                                    <h6>–ò—Å—Ç–æ—Ä–∏—è —Å–¥–µ–ª–æ–∫:</h6>
                                    <table class="table table-sm">
                                        <thead>
                                            <tr>
                                                <th>–î–∞—Ç–∞</th>
                                                <th>–¢–∏–ø</th>
                                                <th>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ</th>
                                                <th>–¶–µ–Ω–∞</th>
                                                <th>–°—É–º–º–∞</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var trade in position.Trades.OrderByDescending(t => t.Date))
                                            {
                                                <tr>
                                                    <td>@trade.Date.ToString("dd.MM.yyyy HH:mm")</td>
                                                    <td>@trade.Type</td>
                                                    <td>@trade.Quantity</td>
                                                    <td>@trade.Price.ToString("F2")</td>
                                                    <td class="@(trade.Amount >= 0 ? "text-success" : "text-danger")">
                                                        @if (trade.Type.Contains("Buy") && trade.Amount > 0)
                                                        {
                                                            <text>üö´</text>
                                                        }
                                                        @trade.Amount.ToString("F2")
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <script>
    function showTrades(figi) {
        const row = document.getElementById('trades_' + figi);
        row.style.display = row.style.display === 'none' ? 'table-row' : 'none';
    }
    </script>
}
else if (!string.IsNullOrEmpty(Model.SelectedAccountId))
{
    <div class="alert alert-info mt-4">
        –ü–æ–∑–∏—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥.
    </div>
}